// Generated from Lustre.g4 by ANTLR 4.0
package jkind.lustre.parsing;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class LustreLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__41=1, T__40=2, T__39=3, T__38=4, T__37=5, T__36=6, T__35=7, T__34=8, 
		T__33=9, T__32=10, T__31=11, T__30=12, T__29=13, T__28=14, T__27=15, T__26=16, 
		T__25=17, T__24=18, T__23=19, T__22=20, T__21=21, T__20=22, T__19=23, 
		T__18=24, T__17=25, T__16=26, T__15=27, T__14=28, T__13=29, T__12=30, 
		T__11=31, T__10=32, T__9=33, T__8=34, T__7=35, T__6=36, T__5=37, T__4=38, 
		T__3=39, T__2=40, T__1=41, T__0=42, REAL=43, BOOL=44, INT=45, ID=46, QUOTED_ID=47, 
		WS=48, SL_COMMENT=49, ML_COMMENT=50, MAIN=51, ERROR=52;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"']'", "'subrange'", "'of'", "','", "'-'", "'['", "'node'", "'*'", "'or'", 
		"':'", "'('", "'not'", "'if'", "'int'", "'<'", "'var'", "'<='", "'and'", 
		"'let'", "'tel'", "'else'", "'->'", "'xor'", "'pre'", "'bool'", "')'", 
		"'=>'", "'+'", "'<>'", "'--%PROPERTY'", "'='", "';'", "'div'", "'const'", 
		"'>'", "'type'", "'then'", "'returns'", "'/'", "'>='", "'assert'", "'real'", 
		"REAL", "BOOL", "INT", "ID", "QUOTED_ID", "WS", "SL_COMMENT", "ML_COMMENT", 
		"MAIN", "ERROR"
	};
	public static final String[] ruleNames = {
		"T__41", "T__40", "T__39", "T__38", "T__37", "T__36", "T__35", "T__34", 
		"T__33", "T__32", "T__31", "T__30", "T__29", "T__28", "T__27", "T__26", 
		"T__25", "T__24", "T__23", "T__22", "T__21", "T__20", "T__19", "T__18", 
		"T__17", "T__16", "T__15", "T__14", "T__13", "T__12", "T__11", "T__10", 
		"T__9", "T__8", "T__7", "T__6", "T__5", "T__4", "T__3", "T__2", "T__1", 
		"T__0", "REAL", "BOOL", "INT", "ID", "QUOTED_ID", "WS", "SL_COMMENT", 
		"ML_COMMENT", "MAIN", "ERROR"
	};


	public LustreLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Lustre.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 47: WS_action((RuleContext)_localctx, actionIndex); break;

		case 48: SL_COMMENT_action((RuleContext)_localctx, actionIndex); break;

		case 49: ML_COMMENT_action((RuleContext)_localctx, actionIndex); break;

		case 50: MAIN_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void ML_COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 2: skip();  break;
		}
	}
	private void MAIN_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 3: skip();  break;
		}
	}
	private void WS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: skip();  break;
		}
	}
	private void SL_COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1: skip();  break;
		}
	}

	public static final String _serializedATN =
		"\2\4\66\u016f\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b"+
		"\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20"+
		"\t\20\4\21\t\21\4\22\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27"+
		"\t\27\4\30\t\30\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36"+
		"\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4"+
		"(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62"+
		"\t\62\4\63\t\63\4\64\t\64\4\65\t\65\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3"+
		"\3\3\3\3\3\3\4\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\t"+
		"\3\t\3\n\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\17"+
		"\3\17\3\17\3\17\3\20\3\20\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\23\3\23"+
		"\3\23\3\23\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26"+
		"\3\26\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\32\3\32"+
		"\3\32\3\32\3\32\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\36\3\36\3\36\3\37"+
		"\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 \3!\3!\3"+
		"\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3#\3$\3$\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3"+
		"\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3(\3(\3)\3)\3)\3*\3*\3*\3*\3*\3*\3*\3+"+
		"\3+\3+\3+\3+\3,\3,\3,\3,\3-\3-\3-\3-\3-\3-\3-\3-\3-\5-\u0119\n-\3.\6."+
		"\u011c\n.\r.\16.\u011d\3/\3/\7/\u0122\n/\f/\16/\u0125\13/\3/\5/\u0128"+
		"\n/\3\60\3\60\3\60\3\60\3\60\3\60\7\60\u0130\n\60\f\60\16\60\u0133\13"+
		"\60\3\60\3\60\3\61\6\61\u0138\n\61\r\61\16\61\u0139\3\61\3\61\3\62\3\62"+
		"\3\62\3\62\3\62\7\62\u0143\n\62\f\62\16\62\u0146\13\62\3\62\5\62\u0149"+
		"\n\62\3\62\5\62\u014c\n\62\3\62\5\62\u014f\n\62\3\62\3\62\3\63\3\63\3"+
		"\63\3\63\7\63\u0157\n\63\f\63\16\63\u015a\13\63\3\63\3\63\3\63\3\63\3"+
		"\63\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\5\64\u016a\n\64\3\64"+
		"\3\64\3\65\3\65\3\u0158\66\3\3\1\5\4\1\7\5\1\t\6\1\13\7\1\r\b\1\17\t\1"+
		"\21\n\1\23\13\1\25\f\1\27\r\1\31\16\1\33\17\1\35\20\1\37\21\1!\22\1#\23"+
		"\1%\24\1\'\25\1)\26\1+\27\1-\30\1/\31\1\61\32\1\63\33\1\65\34\1\67\35"+
		"\19\36\1;\37\1= \1?!\1A\"\1C#\1E$\1G%\1I&\1K\'\1M(\1O)\1Q*\1S+\1U,\1W"+
		"-\1Y.\1[/\1]\60\1_\61\1a\62\2c\63\3e\64\4g\65\5i\66\1\3\2\t\3\62;\5C\\"+
		"aac|\6\62;C\\aac|\3$$\5\13\f\16\17\"\"\5\f\f\17\17\'\'\4\f\f\17\17\u017b"+
		"\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2"+
		"\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2"+
		"\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2"+
		"\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2"+
		"\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3"+
		"\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2"+
		"\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2"+
		"U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3"+
		"\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\3k\3\2\2\2\5m\3\2\2"+
		"\2\7v\3\2\2\2\ty\3\2\2\2\13{\3\2\2\2\r}\3\2\2\2\17\177\3\2\2\2\21\u0084"+
		"\3\2\2\2\23\u0086\3\2\2\2\25\u0089\3\2\2\2\27\u008b\3\2\2\2\31\u008d\3"+
		"\2\2\2\33\u0091\3\2\2\2\35\u0094\3\2\2\2\37\u0098\3\2\2\2!\u009a\3\2\2"+
		"\2#\u009e\3\2\2\2%\u00a1\3\2\2\2\'\u00a5\3\2\2\2)\u00a9\3\2\2\2+\u00ad"+
		"\3\2\2\2-\u00b2\3\2\2\2/\u00b5\3\2\2\2\61\u00b9\3\2\2\2\63\u00bd\3\2\2"+
		"\2\65\u00c2\3\2\2\2\67\u00c4\3\2\2\29\u00c7\3\2\2\2;\u00c9\3\2\2\2=\u00cc"+
		"\3\2\2\2?\u00d8\3\2\2\2A\u00da\3\2\2\2C\u00dc\3\2\2\2E\u00e0\3\2\2\2G"+
		"\u00e6\3\2\2\2I\u00e8\3\2\2\2K\u00ed\3\2\2\2M\u00f2\3\2\2\2O\u00fa\3\2"+
		"\2\2Q\u00fc\3\2\2\2S\u00ff\3\2\2\2U\u0106\3\2\2\2W\u010b\3\2\2\2Y\u0118"+
		"\3\2\2\2[\u011b\3\2\2\2]\u0127\3\2\2\2_\u0129\3\2\2\2a\u0137\3\2\2\2c"+
		"\u013d\3\2\2\2e\u0152\3\2\2\2g\u0160\3\2\2\2i\u016d\3\2\2\2kl\7_\2\2l"+
		"\4\3\2\2\2mn\7u\2\2no\7w\2\2op\7d\2\2pq\7t\2\2qr\7c\2\2rs\7p\2\2st\7i"+
		"\2\2tu\7g\2\2u\6\3\2\2\2vw\7q\2\2wx\7h\2\2x\b\3\2\2\2yz\7.\2\2z\n\3\2"+
		"\2\2{|\7/\2\2|\f\3\2\2\2}~\7]\2\2~\16\3\2\2\2\177\u0080\7p\2\2\u0080\u0081"+
		"\7q\2\2\u0081\u0082\7f\2\2\u0082\u0083\7g\2\2\u0083\20\3\2\2\2\u0084\u0085"+
		"\7,\2\2\u0085\22\3\2\2\2\u0086\u0087\7q\2\2\u0087\u0088\7t\2\2\u0088\24"+
		"\3\2\2\2\u0089\u008a\7<\2\2\u008a\26\3\2\2\2\u008b\u008c\7*\2\2\u008c"+
		"\30\3\2\2\2\u008d\u008e\7p\2\2\u008e\u008f\7q\2\2\u008f\u0090\7v\2\2\u0090"+
		"\32\3\2\2\2\u0091\u0092\7k\2\2\u0092\u0093\7h\2\2\u0093\34\3\2\2\2\u0094"+
		"\u0095\7k\2\2\u0095\u0096\7p\2\2\u0096\u0097\7v\2\2\u0097\36\3\2\2\2\u0098"+
		"\u0099\7>\2\2\u0099 \3\2\2\2\u009a\u009b\7x\2\2\u009b\u009c\7c\2\2\u009c"+
		"\u009d\7t\2\2\u009d\"\3\2\2\2\u009e\u009f\7>\2\2\u009f\u00a0\7?\2\2\u00a0"+
		"$\3\2\2\2\u00a1\u00a2\7c\2\2\u00a2\u00a3\7p\2\2\u00a3\u00a4\7f\2\2\u00a4"+
		"&\3\2\2\2\u00a5\u00a6\7n\2\2\u00a6\u00a7\7g\2\2\u00a7\u00a8\7v\2\2\u00a8"+
		"(\3\2\2\2\u00a9\u00aa\7v\2\2\u00aa\u00ab\7g\2\2\u00ab\u00ac\7n\2\2\u00ac"+
		"*\3\2\2\2\u00ad\u00ae\7g\2\2\u00ae\u00af\7n\2\2\u00af\u00b0\7u\2\2\u00b0"+
		"\u00b1\7g\2\2\u00b1,\3\2\2\2\u00b2\u00b3\7/\2\2\u00b3\u00b4\7@\2\2\u00b4"+
		".\3\2\2\2\u00b5\u00b6\7z\2\2\u00b6\u00b7\7q\2\2\u00b7\u00b8\7t\2\2\u00b8"+
		"\60\3\2\2\2\u00b9\u00ba\7r\2\2\u00ba\u00bb\7t\2\2\u00bb\u00bc\7g\2\2\u00bc"+
		"\62\3\2\2\2\u00bd\u00be\7d\2\2\u00be\u00bf\7q\2\2\u00bf\u00c0\7q\2\2\u00c0"+
		"\u00c1\7n\2\2\u00c1\64\3\2\2\2\u00c2\u00c3\7+\2\2\u00c3\66\3\2\2\2\u00c4"+
		"\u00c5\7?\2\2\u00c5\u00c6\7@\2\2\u00c68\3\2\2\2\u00c7\u00c8\7-\2\2\u00c8"+
		":\3\2\2\2\u00c9\u00ca\7>\2\2\u00ca\u00cb\7@\2\2\u00cb<\3\2\2\2\u00cc\u00cd"+
		"\7/\2\2\u00cd\u00ce\7/\2\2\u00ce\u00cf\7\'\2\2\u00cf\u00d0\7R\2\2\u00d0"+
		"\u00d1\7T\2\2\u00d1\u00d2\7Q\2\2\u00d2\u00d3\7R\2\2\u00d3\u00d4\7G\2\2"+
		"\u00d4\u00d5\7T\2\2\u00d5\u00d6\7V\2\2\u00d6\u00d7\7[\2\2\u00d7>\3\2\2"+
		"\2\u00d8\u00d9\7?\2\2\u00d9@\3\2\2\2\u00da\u00db\7=\2\2\u00dbB\3\2\2\2"+
		"\u00dc\u00dd\7f\2\2\u00dd\u00de\7k\2\2\u00de\u00df\7x\2\2\u00dfD\3\2\2"+
		"\2\u00e0\u00e1\7e\2\2\u00e1\u00e2\7q\2\2\u00e2\u00e3\7p\2\2\u00e3\u00e4"+
		"\7u\2\2\u00e4\u00e5\7v\2\2\u00e5F\3\2\2\2\u00e6\u00e7\7@\2\2\u00e7H\3"+
		"\2\2\2\u00e8\u00e9\7v\2\2\u00e9\u00ea\7{\2\2\u00ea\u00eb\7r\2\2\u00eb"+
		"\u00ec\7g\2\2\u00ecJ\3\2\2\2\u00ed\u00ee\7v\2\2\u00ee\u00ef\7j\2\2\u00ef"+
		"\u00f0\7g\2\2\u00f0\u00f1\7p\2\2\u00f1L\3\2\2\2\u00f2\u00f3\7t\2\2\u00f3"+
		"\u00f4\7g\2\2\u00f4\u00f5\7v\2\2\u00f5\u00f6\7w\2\2\u00f6\u00f7\7t\2\2"+
		"\u00f7\u00f8\7p\2\2\u00f8\u00f9\7u\2\2\u00f9N\3\2\2\2\u00fa\u00fb\7\61"+
		"\2\2\u00fbP\3\2\2\2\u00fc\u00fd\7@\2\2\u00fd\u00fe\7?\2\2\u00feR\3\2\2"+
		"\2\u00ff\u0100\7c\2\2\u0100\u0101\7u\2\2\u0101\u0102\7u\2\2\u0102\u0103"+
		"\7g\2\2\u0103\u0104\7t\2\2\u0104\u0105\7v\2\2\u0105T\3\2\2\2\u0106\u0107"+
		"\7t\2\2\u0107\u0108\7g\2\2\u0108\u0109\7c\2\2\u0109\u010a\7n\2\2\u010a"+
		"V\3\2\2\2\u010b\u010c\5[.\2\u010c\u010d\7\60\2\2\u010d\u010e\5[.\2\u010e"+
		"X\3\2\2\2\u010f\u0110\7v\2\2\u0110\u0111\7t\2\2\u0111\u0112\7w\2\2\u0112"+
		"\u0119\7g\2\2\u0113\u0114\7h\2\2\u0114\u0115\7c\2\2\u0115\u0116\7n\2\2"+
		"\u0116\u0117\7u\2\2\u0117\u0119\7g\2\2\u0118\u010f\3\2\2\2\u0118\u0113"+
		"\3\2\2\2\u0119Z\3\2\2\2\u011a\u011c\t\2\2\2\u011b\u011a\3\2\2\2\u011c"+
		"\u011d\3\2\2\2\u011d\u011b\3\2\2\2\u011d\u011e\3\2\2\2\u011e\\\3\2\2\2"+
		"\u011f\u0123\t\3\2\2\u0120\u0122\t\4\2\2\u0121\u0120\3\2\2\2\u0122\u0125"+
		"\3\2\2\2\u0123\u0121\3\2\2\2\u0123\u0124\3\2\2\2\u0124\u0128\3\2\2\2\u0125"+
		"\u0123\3\2\2\2\u0126\u0128\5_\60\2\u0127\u011f\3\2\2\2\u0127\u0126\3\2"+
		"\2\2\u0128^\3\2\2\2\u0129\u012a\7s\2\2\u012a\u012b\7$\2\2\u012b\u0131"+
		"\3\2\2\2\u012c\u0130\n\5\2\2\u012d\u012e\7$\2\2\u012e\u0130\7$\2\2\u012f"+
		"\u012c\3\2\2\2\u012f\u012d\3\2\2\2\u0130\u0133\3\2\2\2\u0131\u012f\3\2"+
		"\2\2\u0131\u0132\3\2\2\2\u0132\u0134\3\2\2\2\u0133\u0131\3\2\2\2\u0134"+
		"\u0135\7$\2\2\u0135`\3\2\2\2\u0136\u0138\t\6\2\2\u0137\u0136\3\2\2\2\u0138"+
		"\u0139\3\2\2\2\u0139\u0137\3\2\2\2\u0139\u013a\3\2\2\2\u013a\u013b\3\2"+
		"\2\2\u013b\u013c\b\61\2\2\u013cb\3\2\2\2\u013d\u013e\7/\2\2\u013e\u013f"+
		"\7/\2\2\u013f\u0148\3\2\2\2\u0140\u0144\n\7\2\2\u0141\u0143\n\b\2\2\u0142"+
		"\u0141\3\2\2\2\u0143\u0146\3\2\2\2\u0144\u0142\3\2\2\2\u0144\u0145\3\2"+
		"\2\2\u0145\u0149\3\2\2\2\u0146\u0144\3\2\2\2\u0147\u0149\3\2\2\2\u0148"+
		"\u0140\3\2\2\2\u0148\u0147\3\2\2\2\u0149\u014e\3\2\2\2\u014a\u014c\7\17"+
		"\2\2\u014b\u014a\3\2\2\2\u014b\u014c\3\2\2\2\u014c\u014d\3\2\2\2\u014d"+
		"\u014f\7\f\2\2\u014e\u014b\3\2\2\2\u014e\u014f\3\2\2\2\u014f\u0150\3\2"+
		"\2\2\u0150\u0151\b\62\3\2\u0151d\3\2\2\2\u0152\u0153\7\61\2\2\u0153\u0154"+
		"\7,\2\2\u0154\u0158\3\2\2\2\u0155\u0157\13\2\2\2\u0156\u0155\3\2\2\2\u0157"+
		"\u015a\3\2\2\2\u0158\u0159\3\2\2\2\u0158\u0156\3\2\2\2\u0159\u015b\3\2"+
		"\2\2\u015a\u0158\3\2\2\2\u015b\u015c\7,\2\2\u015c\u015d\7\61\2\2\u015d"+
		"\u015e\3\2\2\2\u015e\u015f\b\63\4\2\u015ff\3\2\2\2\u0160\u0161\7/\2\2"+
		"\u0161\u0162\7/\2\2\u0162\u0163\7\'\2\2\u0163\u0164\7O\2\2\u0164\u0165"+
		"\7C\2\2\u0165\u0166\7K\2\2\u0166\u0167\7P\2\2\u0167\u0169\3\2\2\2\u0168"+
		"\u016a\7=\2\2\u0169\u0168\3\2\2\2\u0169\u016a\3\2\2\2\u016a\u016b\3\2"+
		"\2\2\u016b\u016c\b\64\5\2\u016ch\3\2\2\2\u016d\u016e\13\2\2\2\u016ej\3"+
		"\2\2\2\20\2\u0118\u011d\u0123\u0127\u012f\u0131\u0139\u0144\u0148\u014b"+
		"\u014e\u0158\u0169";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
	}
}